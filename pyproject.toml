[tool.poetry]
name = "dynamo"
version = "0.2.0"
description = "Quantum entanglement!"
authors = ["trumully <truman.mulholland@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
discord-py = { git = "https://github.com/mikeshardmind/discord.py.git", branch = "salamander-reloaded" }
click = "^8.1.7"
toml = "^0.10.2"
python-dateutil = "^2.9.0.post0"
platformdirs = "^4.2.2"
xxhash = "^3.5.0"
msgspec = "^0.18.6"
base2048 = "^0.1.3"
numpy = "^2.1.0"
pillow = "^10.4.0"
truststore = "^0.9.2"

[tool.poetry.scripts]
dynamo = "dynamo.launcher:main"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
pytest = "^8.3.2"
hypothesis = "^6.112.0"
pytest-asyncio = "^0.24.0"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "F", "E", "I", "UP", "YTT", "ANN", "S", "BLE", "B", "A", "COM", "C4", "DTZ",
    "EM", "ISC", "G", "INP", "PIE", "T20", "Q003", "RSE", "RET", "SIM", "TID", "PTH",
    "ERA", "PD", "PLC", "PLE", "PLR", "PLW", "TRY", "NPY", "RUF", "ASYNC",
]
ignore = [
    "RUF001",  # ambiguous characters not something I want to enforce here.
    "G002",  # erroneous issue with %-logging when logging can be confiured for % logging
    "S101",  # use of assert here is a known quantity, blame typing memes
    "PLR2004",  # Magic value comparison
    "PLC0105",  # no co-naming style
    "SIM105",  # supressable exception
    "C90",  # mccabe complexity
    "ANN101", # missing "Self" annotation, self is implicit
    "ANN202", # implied return fine sometimes
    "ANN204",  # special method return types
    "ANN401",  # Any return
    "PLR0912", # too many branches
    "PLR0913", # number of function arguments
    "PLR0915",
    "UP007", # "Use | For Union" doesn't account for typevar tuple unpacking.
    "COM812", # ruff format suggested
    "ISC001", # ruff format suggested
    "B008",
    "ASYNC109", # timeout is not awaited
]
unfixable = [
    "ERA"  # I don't want anything erroneously detected deleted by this.
]

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
